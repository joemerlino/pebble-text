make middle button a back button after dictating contact
make presets settings
think about what happens if authorization for contacts not given (i.e. don't lookup allContacts)
implement ability to dictate number

@interface PBLockerAppManager : _ABAddressBookAddRecord
{
    NSString *_userAccountID;
    PBLocalAppsStorage *_localAppsStorage;
    PBResourceFileStorage *_timelineBlobMapperConfigurationCache;
    PBLockerSessionManager *_lockerSessionManager;
    PBLockerAppDataStore *_dataStore;
    id <PBLockerAppManagerDataUpdatePolicy> _dataUpdatePolicy;
    RACSignal *_refreshLockerAppsSignal;
    NSHashTable *_watchAppManagers;
    NSObject<OS_dispatch_queue> *_managersQueue;
    NSHashTable *_observers;
    NSObject<OS_dispatch_queue> *_observersQueue;
    NSObject<OS_dispatch_queue> *_synchronizingQueue;
}

+ (id)currentUserLockerAppManager;
- (id)synchronizingQueue;
- (id)observersQueue;
- (id)observers;
- (id)managersQueue;
- (id)watchAppManagers;
- (void)setRefreshLockerAppsSignal:(id)fp8;
- (id)refreshLockerAppsSignal;
- (id)dataUpdatePolicy;
- (id)dataStore;
- (id)lockerSessionManager;
- (id)timelineBlobMapperConfigurationCache;
- (id)localAppsStorage;
- (id)userAccountID;
- (void).cxx_destruct;
- (void)refreshLockerApplicationsWithCompletion:(id)fp(null);
- (void)notifyObservers:(id)fp(null);
- (void)sendAppReorderNotificationWithApp:(id)fp8 originalPosition:(unsigned int)fp12 destinationPosition:(unsigned int)fp16;
- (void)fetchTimelineTokenForRemoteApp:(id)fp8 completion:(id)fp(null);
- (void)fetchTimelineTokenForSideloadedApp:(id)fp8 completion:(id)fp(null);
- (void)setNeedsRefreshLockerApps;
- (void)refreshDataAccordingToPolicyWithCompletion:(id)fp(null);
- (void)addNotificationObservers;
- (void)addSystemAppsIfNeeded;
- (void)prependWatchAppToDataStoreIfNeeded:(id)fp8;
- (void)allWatchServicesPerformBlock:(id)fp(null);
- (id)synchronizeAllWatchServicesWithForceReordering:(BOOL)fp8;
- (void)removeAppInstallationsForWatch:(id)fp8;
- (void)fetchTimelineTokenForAppWithUUID:(id)fp8 completion:(id)fp(null);
- (void)moveWatchFace:(id)fp8 displacingWatchFace:(id)fp12;
- (void)moveWatchApp:(id)fp8 displacingWatchApp:(id)fp12;
- (void)markWatchAppAsConfigured:(id)fp8;
- (id)_unregisterWatchApp:(id)fp8;
- (id)_registerWatchApp:(id)fp8;
- (id)bundleDataFromWatchApp:(id)fp8;
- (id)nameForWatchApp:(id)fp8;
- (id)bundleConfigurationForWatchApp:(id)fp8 platformType:(int)fp12;
- (id)resourcelessConfigurationForWatchApp:(id)fp8;
- (id)appLayoutConfigurationWithData:(id)fp8;
- (id)timelineMapperConfigurationForWatchApp:(id)fp8 platformType:(int)fp12;
- (id)cachedConfigurationForWatchApp:(id)fp8 platformType:(int)fp12;
- (id)fetchApplicationBundle:(id)fp8;
- (void)refreshDataIfNecessaryWithCompletion:(id)fp(null);
- (void)refreshDataIfNecessary;
- (id)unregisterWatchApp:(id)fp8;
- (id)registerWatchApp:(id)fp8;
- (void)addRemoteApplication:(id)fp8 completion:(id)fp(null);
- (void)setCurrentlySelectedWatchFace:(id)fp8 forWatch:(id)fp12;
- (id)currentlySelectedWatchFaceForWatch:(id)fp8;
- (void)synchronizationFinishedForWatch:(id)fp8;
- (void)acknowlegeApplicationChange:(id)fp8 forWatch:(id)fp12;
- (id)applicationChangesForWatch:(id)fp8 platformType:(int)fp12;
- (void)removeLockerAppManagerObserver:(id)fp8;
- (void)addLockerAppManagerObserver:(id)fp8;
- (void)removeWatchAppManager:(id)fp8;
- (void)addWatchAppManager:(id)fp8;
- (id)applicationWithUUID:(id)fp8;
- (void)setApplications:(id)fp8;
- (id)watchfaces;
- (id)watchapps;
- (id)applications;
- (void)dealloc;
- (id)init;
- (id)initWithUserAccountID:(id)fp8 localAppsStorage:(id)fp12 lockerSessionManager:(id)fp16 timelineBlobMapperConfigurationCache:(id)fp20;

@end